# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: passkit_sdk/core/a_rpc_images.proto for package 'io'

require 'grpc'
require 'passkit_sdk/core/a_rpc_images_pb'

module PasskitSdk
  module Io
    module Images
      class Service
        include GRPC::GenericService

        self.marshal_class_method = :encode
        self.unmarshal_class_method = :decode
        self.service_name = 'io.Images'

        rpc :setProfileImage, ProfileImageInput, Google::Protobuf::Empty
        rpc :getProfileImage, Google::Protobuf::Empty, Url
        rpc :getProfileImageById, Id, Url
        rpc :createImages, CreateImageInput, ImageIds
        rpc :updateImage, UpdateImageInput, ImageRecord
        rpc :getImageURL, Id, Url
        # returns a zip bundle containing all images for that ID
        rpc :getImageBundle, Id, ImageBundle
        rpc :getImageData, Id, ImageRecord
        rpc :getLocalizedImageURL, LocalizedImageInput, Url
        rpc :deleteImage, Id, Google::Protobuf::Empty
        rpc :deleteLocalizedImage, LocalizedImageInput, ImageRecord
        rpc :listImagesForUserDeprecated, Pagination, stream(ImageRecord)
        rpc :listImagesForUser, Filters, stream(ImageRecord)
        rpc :listImagesDeprecated, Pagination, stream(ImageRecord)
        rpc :listImages, Filters, stream(ImageRecord)
        rpc :countImagesDeprecated, Pagination, Count
        rpc :countImages, Filters, Count
        rpc :countImagesForUserDeprecated, Pagination, Count
        rpc :countImagesForUser, Filters, Count
      end

      Stub = Service.rpc_stub_class
    end
  end
end
