# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: passkit_sdk/member/a_rpc.proto for package 'members'
# Original file comments:
# *
# Members RPC
#
# The PassKit Members API lets you manage your membership programs and passes for Apple Wallet and Google Pay.

require 'grpc'
require 'passkit_sdk/member/a_rpc_pb'

module PasskitSdk
  module Members
    class Service
      include GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'members.Members'

      # Create a program record. Allows a user to specify program details around enrolment, renewal and cancellation processes. Optionally allows the user to set the GPS location / Beacons that will trigger a lock-screen alert.
      rpc :createProgram, Program, Io::Id
      # Updates an existing program record.
      rpc :updateProgram, Program, Program
      # Gets an existing program record by id.
      rpc :getProgram, Io::Id, Program
      # Copies an existing program record to a new record, and allows for status of new program to be set; i.e. copy a draft to published (production) program. Will copy program AND related tier + template records.
      rpc :copyProgram, ProgramCopyRequest, Io::Id
      # Deletes an existing program record by id. Deleting a program results in all tiers, and members underneath it being invalidated and removed. Needs to be used with care.
      rpc :deleteProgram, Io::Id, Google::Protobuf::Empty
      # Lists all programs for the logged in user.
      rpc :listProgramsDeprecated, Io::Pagination, stream(Program)
      # Lists all programs for the logged in user.
      rpc :listPrograms, Io::Filters, stream(Program)
      # Create a new tier in an existing member program. Tiers allow a user to categorize their membership program; tiers allow for additional detail that is specific to that 'group' of members. A program needs at least one tier.
      rpc :createTier, Tier, Io::Id
      # Updates a tier by tier id
      rpc :updateTier, Tier, Tier
      # Gets a tier by tier ID
      rpc :getTier, TierRequestInput, Tier
      # Deletes a tier. Deleting a tier will invalidate and delete all the passes that are in the tier.
      rpc :deleteTier, TierRequestInput, Google::Protobuf::Empty
      # Lists all the tiers.
      rpc :listTiersDeprecated, ListRequestDeprecated, stream(Tier)
      # Lists all the tiers.
      rpc :listTiers, ListRequest, stream(Tier)
      # Enrols a new member into a tier of a program. Returns the PassKit Member ID.
      rpc :enrolMember, Member, Io::Id
      # Enrols a new member into the default tier (lowest tier index) of a program. Returns the PassKit Member ID.
      rpc :enrolMemberPublic, Member, Io::Id
      rpc :getMemberRecordById, Io::Id, Member
      rpc :getMemberRecordByExternalId, MemberRecordByExternalIdRequest, Member
      rpc :checkInMember, MemberCheckInOutRequest, Google::Protobuf::Empty
      rpc :checkOutMember, MemberCheckInOutRequest, Google::Protobuf::Empty
      rpc :listMembersDeprecated, ListRequestDeprecated, stream(Member)
      rpc :listMembers, ListRequest, stream(Member)
      rpc :updateMember, Member, Io::Id
      # @todo: define callback
      rpc :earnPoints, EarnBurnPointsRequest, MemberPoints
      # @todo: define callback
      rpc :burnPoints, EarnBurnPointsRequest, MemberPoints
      rpc :setPoints, SetPointsRequest, MemberPoints
      rpc :updateMembersBySegment, MemberSegmentRequest, Google::Protobuf::Empty
      rpc :deleteMembersBySegment, MemberSegmentRequest, Google::Protobuf::Empty
      rpc :deleteMember, Member, Google::Protobuf::Empty
      rpc :countMembersDeprecated, ListRequestDeprecated, Io::Count
      rpc :countMembers, ListRequest, Io::Count
      rpc :getMessageHistoryForMember, Io::Pagination, stream(Io::Message)
      rpc :getMetaKeysForProgram, Io::Id, Io::Strings
      rpc :renewMembersExpiry, UpdateExpiryRequest, Io::Count
      rpc :countMemberEvents, ListRequest, Io::Count
      rpc :listMemberEvents, ListRequest, stream(MemberEvent)
      rpc :getMemberEventMetaKeysForProgram, Io::Id, Io::Strings
      rpc :listEventsForMember, Io::Id, stream(MemberEvent)
      rpc :deleteMemberEvents, ListRequest, Google::Protobuf::Empty
      rpc :deleteEventsForMember, Io::Id, Google::Protobuf::Empty
      rpc :deleteMemberEvent, Io::Id, Google::Protobuf::Empty
    end

    Stub = Service.rpc_stub_class
  end
end
