# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: passkit_sdk/raw/a_rpc.proto for package 'raw'
# Original file comments:
# *
# This protocol is suit for cases where the business logic is handled elsewhere, and the purpose is purely to issue and
# update content for Apple Wallet and Google Pay.

require 'grpc'
require 'passkit_sdk/raw/a_rpc_pb'

module PasskitSdk
  module Raw
    class Service
      include GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'raw.Raw'

      rpc :createPassProject, PassProject, Io::Id
      rpc :updatePassProject, PassProject, PassProject
      rpc :getPassProject, Io::Id, PassProject
      rpc :copyPassProject, PassProjectCopyRequest, Io::Id
      rpc :deletePassProject, Io::Id, Google::Protobuf::Empty
      rpc :createPass, Pass, Io::Id
      rpc :updatePass, Pass, Io::Id
      rpc :streamPassUpdates, stream(Pass), stream(Io::Id)
      rpc :getPassById, Io::Id, Pass
      rpc :getPassByExternalId, PassRecordByExternalIdRequest, Pass
      rpc :deletePass, Pass, Google::Protobuf::Empty
      rpc :listPassesByPassProject, ListPassesByPassProjectRequest, stream(Pass)
      rpc :listPassesByPassTemplate, ListPassesByPassTemplateRequest, stream(Pass)
    end

    Stub = Service.rpc_stub_class
  end
end
